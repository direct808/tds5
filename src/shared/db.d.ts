/**
 * This file was generated by kysely-codegen.
 * Please do not edit it manually.
 */

import type { ColumnType } from 'kysely'

export type ConversionPreviousstatusEnum = 'lead' | 'rejected' | 'sale'

export type ConversionStatusEnum = 'lead' | 'rejected' | 'sale'

export type Generated<T> =
  T extends ColumnType<infer S, infer I, infer U>
    ? ColumnType<S, I | undefined, U>
    : ColumnType<T, T | undefined, T>

export type Json = JsonValue

export type JsonArray = JsonValue[]

export type JsonObject = {
  [x: string]: JsonValue | undefined
}

export type JsonPrimitive = boolean | number | string | null

export type JsonValue = JsonArray | JsonObject | JsonPrimitive

export type Numeric = ColumnType<string, number | string, number | string>

export type StreamActiontypeEnum =
  | 'NOTHING'
  | 'SHOW_HTML'
  | 'SHOW_TEXT'
  | 'SHOW404'
  | 'TO_CAMPAIGN'

export type StreamRedirecttypeEnum =
  | 'CURL'
  | 'FORM_SUBMIT'
  | 'HTTP'
  | 'IFRAME'
  | 'JS'
  | 'META'
  | 'META2'
  | 'REMOTE'
  | 'WITHOUT_REFERER'

export type StreamSchemaEnum = 'ACTION' | 'DIRECT_URL' | 'LANDINGS_OFFERS'

export type Timestamp = ColumnType<Date, Date | string, Date | string>

export interface AffiliateNetwork {
  createdAt: Generated<Timestamp>
  deletedAt: Timestamp | null
  id: Generated<string>
  name: string
  offerParams: string | null
  updatedAt: Generated<Timestamp>
  userId: string
}

export interface Campaign {
  active: boolean
  code: string
  createdAt: Generated<Timestamp>
  deletedAt: Timestamp | null
  id: Generated<string>
  name: string
  sourceId: string | null
  updatedAt: Generated<Timestamp>
  userId: string
}

export interface Click {
  adCampaignId: string | null
  affiliateNetworkId: string | null
  browser: string | null
  browserVersion: string | null
  campaignId: string
  city: string | null
  cost: Numeric | null
  country: string | null
  createdAt: Generated<Timestamp>
  creativeId: string | null
  destination: string | null
  deviceModel: string | null
  deviceType: string | null
  externalId: string | null
  extraParam1: string | null
  extraParam2: string | null
  id: string
  ip: string | null
  isBot: boolean | null
  isProxy: boolean | null
  isUniqueCampaign: boolean | null
  isUniqueGlobal: boolean | null
  isUniqueStream: boolean | null
  keyword: string | null
  language: string | null
  offerId: string | null
  os: string | null
  osVersion: string | null
  previousCampaignId: string | null
  referer: string | null
  region: string | null
  /**
   * Источник (из параметров)
   */
  source: string | null
  streamId: string | null
  subId1: string | null
  subId2: string | null
  trafficSourceId: string | null
  userAgent: string | null
  visitorId: string
}

export interface Conversion {
  clickId: string
  createdAt: Generated<Timestamp>
  id: Generated<string>
  originalStatus: string | null
  params: Json | null
  previousStatus: ConversionPreviousstatusEnum | null
  status: ConversionStatusEnum
}

export interface Offer {
  affiliateNetworkId: string | null
  createdAt: Generated<Timestamp>
  deletedAt: Timestamp | null
  id: Generated<string>
  name: string
  updatedAt: Generated<Timestamp>
  url: string
  userId: string
}

export interface Source {
  createdAt: Generated<Timestamp>
  deletedAt: Timestamp | null
  id: Generated<string>
  name: string
  updatedAt: Generated<Timestamp>
  userId: string
}

export interface Stream {
  actionCampaignId: string | null
  actionContent: string | null
  actionType: StreamActiontypeEnum | null
  campaignId: string
  filters: Json | null
  id: Generated<string>
  name: string
  redirectType: StreamRedirecttypeEnum | null
  redirectUrl: string | null
  schema: StreamSchemaEnum
}

export interface StreamOffer {
  active: boolean
  id: Generated<string>
  offerId: string
  percent: number
  streamId: string
}

export interface User {
  createdAt: Generated<Timestamp>
  email: string
  id: Generated<string>
  password: string
  updatedAt: Generated<Timestamp>
}

export interface DB {
  affiliate_network: AffiliateNetwork
  campaign: Campaign
  click: Click
  conversion: Conversion
  offer: Offer
  source: Source
  stream: Stream
  stream_offer: StreamOffer
  user: User
}
